{
  "comments": [
    {
      "date": "2005-04-02T01:20:54Z",
      "name": "moshe weitzman",
      "comment": "fantasic writeup. i agree that we ought to show breadcrumbs on nodes. as a way to get there, i suggest we fix up <code>taxonomy_context</code> so it does what we want without patching. once we agree on that, then we push a patch into core.\n\nof course, i have a few comments on the text\n<ul>\n<li><code>taxonomy_context_init()</code> is very very bad. The init hook should be rarely used, and never used for something like a <code>node_load()</code>. This breaks \"the bootstrap\" and essentially means your whole site will be slower for anonymous users and more taxed than needed. i will contact the module owner and get this fixed.</li>\n<li>\"Third bug\" is not a bug IMO. That a helpful link to a related page. Of course, I wrote the taxo breadcrumb code so who am i to say.</li>\n</ul>"
    },
    {
      "date": "2005-04-02T13:26:55Z",
      "isAuthorReply": true,
      "comment": "I agree that <code>taxonomy_context</code> needs to be fixed up so that it implements this patch. I just wasn't sure if this was a patch that everyone wanted, or if it was considered more of a fork. After all, I'm sure many users don't want breadcrumbs showing up on their nodes, because they implement a more complex taxonomy structure, e.g. where a term has more than one parent term. In such cases, breadcrumbs are not only inappropriate but also impossible to implement.\n\nIf a patch does happen, I think that ultimately it should happen on the core taxonomy module itself - the breadcrumb functionality should be moved from <code>taxonomy_context</code> to the core module. But I know that Drupal core changes are not the easiest things in the world to get through, so I'm not hanging on my seat for that to happen.\n\nDidn't realise that the <code>_init()</code> hook was part of the bootstrap mechanism - this is indeed quite inefficient. But hey, that's how I got it! I just took it from there.\n\nAnd last but not least... thanks for the praise! I'm flattered."
    },
    {
      "date": "2005-04-06T15:25:08Z",
      "name": "Nedjo",
      "comment": "I've applied the patch to <code>taxonomy_context.module</code>, thanks for the improvements."
    },
    {
      "date": "2005-04-06T22:33:09Z",
      "isAuthorReply": true,
      "comment": "<strong>Attention all people who are doing this tutorial:</strong>\n\nNow that <code>taxonomy_context.module</code> has been patched to implement the stuff in this article (see previous comment), you no longer need to do steps 1 and 3. Step 2 is still useful, if you want to specify which of your vocabs is used to define your site's master hierarchy (step 2 patches <code>taxonomy.module</code>, which has not changed for 4.5.x since time of writing).\n\nHope that this avoids any confusion in reading this article, and in trying to follow the instructions that it gives. The content of this article will not be changed, as it is a static document and should be kept for historical purposes. Also, although some of the code samples are now obselete, the text itself is still both interesting and relevant for Druapl users who want to understand the taxonomy system better."
    },
    {
      "date": "2005-04-07T03:25:31Z",
      "name": "Ramdak",
      "comment": "Great development! I am happy that your hard work has become useful.\n\nWhere can I get the updated <code>taxonomy_context</code> module? I didn't find on the Drupal downloads page. \n\nJust want to clarify a couple of things:\n\n<ol>\n<li>Is it correct that hierarchical aliases are still available only through your patch?</li>\n<li>And, index pages for vocabularies still need to be done?</li>\n</ol>\n\nRamdak"
    },
    {
      "date": "2005-04-07T06:53:06Z",
      "name": "Nate",
      "comment": "You'll have to get the module from CVS; it's not the \"official\" version yet."
    },
    {
      "date": "2005-04-07T15:43:08Z",
      "name": "Ramdak",
      "comment": "Many thanks."
    },
    {
      "date": "2005-04-09T15:38:00Z",
      "name": "Ramdak",
      "comment": "With the new patch, does the taxonomy_context module still have to be moved outside the <code>/modules/taxonomy_context</code> folder or can it stay there?"
    },
    {
      "date": "2005-04-11T02:16:53Z",
      "name": "Anonymous",
      "comment": "Same question... should <code>tax_context</code> be in the primary modules directory, rather than in its own folder?"
    },
    {
      "date": "2005-04-23T10:37:43Z",
      "name": "Marco Stolpe",
      "comment": "Hi, I'm new to Drupal (using 4.6 already) and so far it's the system which comes very close to a system I had in mind to implement myself (big project, I know). Maybe I can spare my time and just use Drupal applying some fixes. I think its taxonomy system is really great and I have to agree entirely with you that the breadcrumbs shown aren't very nice - nevertheless I have a slightly different approach to so called \"taxonomies of terms\".\n\nThough not a native English speaker, but a German, what I recall from a course about information systems at my university is that there are some important differences between the terms \"category\", \"classification\", \"taxonomy\", \"vocabulary\" and \"term\". I used to confuse them too, but as far as I understand them today I'd say that \"taxonomy\" simply means hierarchical classification. It has become a real buzzword, but in fact it has a very broad meaning and can be applied to almost all sorts of hierarchical classification systems. So let's note that the word \"taxonomy\" has such a broad meaning that it won't lead to any insights.\n\nWhat is much more important though is <em>what</em> you're trying to classify and by what attributes. If one wants to classify animals, for example, one may classify them according to their color, the number of their legs, their size, and so on. If one wants to classify buildings one may classify them according to their size, the time they were build, their style, and so on. Now the different adjectives corresponding with a certain attribute define - in a way - a vocabulary, consisting of proper terms to describe things.\n\nOnce you have found the attributes (vocabularies) with which you can describe your objects in a good way, you can go and tag them with terms of that vocabulary.\n\nSo far, we're still in good old \"Excel\" or relational database tables world: one row in a database table most often describes a certain entity according to its attributes. The possible values of such attributes are - if you want to - terms.\n\nWhat relational databases don't recognize is that there exist certain relationships between terms. Relational databases allow for relationship between entities, but not between the terms (values) describing them. In fact, sometimes it would be desirable to create taxnonomies of terms - hierarchical classifications - to search not only for entities having exactly that attribute value, but - for example - a parent term. What I mean is: the values in hierarchical databases are flat. For example, having tagged your content by type, it is difficult to formulate queries like \"give me all entities which are of type document\", if the content is tagged with more specific terms like \"book\", \"article\" or \"master thesis\". The database won't recognize the parent-child relationship between them, that book, article and master thesis <em>are</em> documents. So taxonomies of terms allow for more sophisticated queries.\n\nWhat is most important now (and the main point of my comment - ups, I've written too much, I fear) is that terms <em>aren't</em> categories. Terms are just that: terms, words, values, at most phrases. Foremost terms are used to describe things in different ways, but alone they're not of much use. For example, searching for all articles written in English might return a whole bunch of irrelevant content. Using a categorization according to type alone might return your whole website once the user searches for a term high above in the hierarchy like \"object\" or \"content\". Therefore, a single master vocabulary doesn't make much sense. Once the user clicks on \"topics\", he should get back all nodes which <em>are</em> a topic. At least according to my interpretation of vocabularies. Vocabularies all have the same importance.\n\nIn the same way, categories aren't terms. As I said, the term \"flower\" means the class of all flowers (on earth) and you won't be able to return all flowers on earth on your web site. The only way to cope with a whole bunch of content nodes is to categorize them (according to your's or your users' liking), that's true, but there's a difference between categorizing terms and categorizing entities/content. When creating categories of content, the terms you have defined in your vocabularies can be <em>used</em>, but they are not categories themselves. Instead they describe <em>classes</em> of content != categories, which are rather sets of objects described by predicates, attributes - well - terms of vocabularies.\n\nWhat one needs to create categories are mathematical set operators like union, intersection and difference. Drupal provides union (+) and intersection (,) and with them one can already build some nice categories.\n\nThat terms are not categories is also easy to see when you take a look at the glossary module for Drupal. The glossary module treats terms exactly the way I described them: as words. IMHO, that's the correct way to treat terms: the description of a vocabulary term should contain a definition  for that term, like terms organized in a thesaurus. If you define the term \"animal\", the description would probably read like a scientific definition in an encyclopedia. That's normally not what users want so see on your website during normal browsing activities, and in that sense, the taxonomy_context module is somewhat stupid. Users want so see such things only when they're clicking on the term or browsing the glossary for your website, but a scientific definition doesn't belong into the header of a category page.\n\nIn comparison, the description of a category might rather read like \"An overview of all the bands in the late nineties which were in the top ten\" or something like that. Now, go and find a single term for that, a term you'd normally find in a thesaurus or glossary. It's impossible!\n\nI'd use the taxonomy system in a different way, therefore. In Drupal, you can define one or more hierarchical menu structures. Use those as your master categorization(s), linking to a taxonomy term url which best describes the content in that category according to the terms you have defined before. Think of terms like keywords.\n\nFor example, when you're categorizing your content according to topic, time and geographical location and you want to create a category of all articles about Drupal published during the last month when you were in New Zeeland, you can link to taxonomy/term/1,47,3 from your menu and give your menu the corresponding hierarchical structure. (If the term \"Drupal\" is term 1, \"March\" term 47 and New Zeeland term 3.)\n\nAlthough this might seem cumbersome at first, over the long run it's a much more flexible system.\n\nInterestingly enough, by using a menu for navigation instead of <code>taxonomy_menu</code> all breadcrumbs are suddenly shown correctly, at least on taxonomy pages.\n\n(Only the titles are ugly and the breadcrumbs on node pages aren't correctly shown: they should both use the current menu as title/breadcrumb, in my opinion. I'll try to fix that in the next days.)\n\nI don't know what the developers had originally intended. I guess it all depends on how much content one has to manage. As long as it all fits into an easy scheme, your system allows for more automatic and less cumbersome categorization than mine. But otherwise, the set operators + and , are more flexible IMHO and must be good for anything at least, don't they?\n\nLuckily, Drupal can be easily extended and changed to fit the needs of many people and that is what looks most promising to me. (Nevertheless, I'm somewhat wondering about having a version 4.5, which to some degree looks buggier than some 0.3 version of other software I've seen, but that's another topic.)\n\nIf you want to know more about information management, categories, taxonomies, thesauri, etc., there's a book I liked a lot: \"Information Architecture\" by Louis Rosenfeld & Peter Morville, O'Reilly, 2nd ed. 2002"
    },
    {
      "date": "2005-04-23T13:35:07Z",
      "isAuthorReply": true,
      "comment": "Marco, I can see that you have extensive knowledge of taxonomy as a mathematical and information-architecture concept. Looks like you know far more about this than me, or than most other Drupal webmasters! You're right, classifying content with terms is far more than simply putting content into 'flat' categories. As you said, only when you use set-theory operators such as union, intersect, and difference - to aggregate your terms into specific combinations - are you really managing your information in the best possible way.\n\nDrupal's taxonomy system has been designed, from the ground up, to support information management in the most powerful way that it can. Using Drupal, you can classify your content according to multiple adjectives (terms) of multiple attributes (vocabularies), as you explained. And you can use the <strong>'+'</strong> and <strong>','</strong> operators to find content that matches a particular combination of these adjectives. This is far better than many content management systems, which let you do little more than put your content in 'folders', meaning that all you have is a flat hierarchy, rather than a complex classification defined by many terms and vocabularies.\n\nHowever, surely you can see that all of this is just too complex for the average user? If all you're trying to do is make a simple website such as a corporate e-brochure, or even an average blog, then it's most likely that all your site needs is a basic hierarchical navigation system. And this is where the taxonomy system disappoints me: it may be perfect for advanced information architects such as yourself; but it has proven to be too daunting for users that simply want to make a basic hierarchy using a bunch of terms.\n\nSo what I'm trying to do - with the 'master hierarchy' concept that I introduce in this article - is to combine the simplicity of a single site hierarchy, with the power and complexity of taxonomic classification. I have made the utmost effort to preserve the potential of the taxonomy system in my approach, because I believe that it's one of the key strengths of Drupal. I hope that by imposing a 'master hierarchy' on a taxonomy, I'm not 'dumbing down' the whole system.\n\nBasically, my theory is that sites should employ multiple vocabularies to classify their content; but that there should be one vocabulary that is <em>more important</em> than all the others. <em>One vocab to rule them all</em>, I guess you could say :-). This vocab is then used to define the breadcrumbs, menus, and other navigational elements that are used in the site. This makes life simpler for the majority of visitors to the site, since most people are accustomed to everything on a site falling under a single hierarchical tree.\n\nMy approach would probably not be so suitable for large sites with thousands of individual nodes of content. In such a situation, navigation based on union / intersect / difference operations would probably be more appropriate than hierarchical 'browsing'. But for sites such as this one, with a relatively small volume of content, I think that something simpler is needed.\n\nI hope I have covered most of what you wrote, Marco: your comment was quite long! But don't feel bad about it, there's no word limit here at GreenAsh... you just use as many words as you need to get your opinion across."
    },
    {
      "date": "2005-04-23T20:37:46Z",
      "name": "Marco Stolpe",
      "comment": "Hi, thank you very much for your answer.\n\n<blockquote><strong>Jaza:</strong> However, surely you can see that all of this is just too complex for the average user? [...] And this is where the taxonomy system disappoints me</blockquote>\n\nYes, I have to agree with you. Thesauri and vocabularies are confusing me anyhow, because I'm not a librarian myself, and they just <em>are</em> that complex. That's because human language is complex and ambiguous, so are the terms we use to categorize and classify content. The authors of the book I've mentioned even have the idea that in information age, every web master to some part has to become a librarian - it's an art. By the way, I wouldn't consider myself to be a good information architect; I've not managed a larger web site so far and only have some theoretical background knowledge.\n\nBut exactly that led me to stumble across some phrases you used in your article, like \"I show you how to patch up some of taxonomy's bugs\" or - in your recent reply - \"the taxonomy system disappoints me\". From a theoretical viewpoint, I'm not sure if the combination of menus and the taxonomy system as I've described it is buggy at all. Maybe it's just what the developers had intended and it's a feature that allows for a much more flexible way to organize content than most other CMS I've seen so far. It almost reminds me of some technologies invented in the Semantic Web effort, like topic maps and RDF, the resource description framework. Maybe it's just a new way of doing things and one has to shift one's perspective a bit.\n\nWhen I read your article, I got the impression as if you wanted to point out that the developers did something wrong. They probably did not, it's rather that you're trying to use taxonomies of terms in a way they were not intended for (from a theoretical viewpoint). In that sense, by bending the taxonomy system to fit your own needs better, you didn't correct a bug, but wrote a hack. ;-)\n\nThat's okay, of course. No one needs to use <code>taxonomy_context</code> if he doesn't want to. I just wanted to point out that there exists another way of doing things - well, maybe a better way - when one has to manage a large amount of content.\n\n<blockquote><strong>Jaza:</strong> I hope that by imposing a 'master hierarchy' on a taxonomy, I'm not 'dumbing down' the whole system.</blockquote>\n\nTo be honest, that was the first impression I got. :-)\n\nBut of course, I don't know what the developers exactly had in mind when they invented the system. The problem I see with Drupal is that some parts of it seem counterintuitive to me regarding taxonomies and that they're not well integrated at all. I think the most lousy thing in Drupal is  its search engine. Why can't I use boolean operators like in almost all other search engines in use today? (Especially since MySQL already has that feature.) Such searches are not too complicated even for the average user, as Google shows. For professional users, why can't they do a power search by restricting search results based on taxonomy terms? As the authors of \"Information Architecture\" explain, taxonomies of terms are mostly used to guide searches anyhow. For example, when someone searches for \"cars\", the search engine can guide him and offer him to search for broader and narrower terms, similar terms, and it can recognize synonyms. That would allow users to find their way through the jungle of information on a side much more easily.\n\nThinking about that, now I could even fully agree with you, and say that it would make more sense to organize everything under a single hierarchy of categories, but use the vocabulary system in the background to guide user's searches.\n\nIn this way, one could then combine the simplicity of a single hierarchy with the power of a highly sophisticated search engine, allowing users to list content in all the possible ways which can be imagined if it's really needed."
    },
    {
      "date": "2005-04-23T23:47:58Z",
      "name": "Ramdak",
      "comment": "And, to think that both editions of Lou Rosenfeld and Peter Morville's classic were right in front of me all these days!"
    },
    {
      "date": "2005-05-31T22:07:40Z",
      "name": "Kenny",
      "comment": "Very interesting discussion (if somewhat over my head!). I am just looking at Drupal once again after becoming aware of it a year ago. At the time I left it because I was just overwhelmed. I would like to thank Jaza for the well thought out and written documentation and the examples that he has contributed, which has convinced me to give it another go.\n\nI am very interested in the flexibility of the taxonomy approach to create a site where articles can be tagged by activity type (trekking, skiing..), country (england, italy..) and category (shopping, lifestyle..)\n\nThis is how I think my taxonomy should be..\n\n<pre class=\"no-highlight\"><code>-Activity\n--Trekking\n--Skiing\n\n-Country\n--England\n--Italy\n\n-Category\n--Shopping\n--Lifestyle</code></pre>\n\nBut I am also wondering if it would be better to use subcategories such as..\n\n<pre class=\"no-highlight\"><code>-Category\n--Shopping\n---Trekking\n---Skiing\n--Lifestyle\n---Trekking\n---Skiing</code></pre>\n\nIdeally I would like to create main sections in my site (think guardian.co.uk) which would group together all relevant stories - which are themselves tagged by the specific activity they refer to. Drupal seems to be the best tool to approach this design with."
    },
    {
      "date": "2005-08-02T01:39:13Z",
      "name": "Martin",
      "comment": "First of all, I enjoyed reading the thread and even though am working with the current 4.6.2 Drupal got something out of it. For the sake of understanding the taxonomy working a bit better I decided to go through the exercise, realizing I do not need to patch. Patch 2 is certainly included in my distro. However, the output was not as I expected, or rather as it must (?) have been before the patch. Please excuse me if this is the wrong location for this post:\n\nMy setup (on a fresh drupal install database and all just for the purpose of this test)\n\n<strong>Categories:</strong>\n\n<pre class=\"no-highlight\"><code>Sections Vocab (Type Page, Story, Single, Weight -8)\n  Posts (weight 0, parent root)\n  -- News (weight 0 (parent posts)\n\nNews by prio vocab (Type: Page, Single, Weight 1)\n  Browse by Prio (parent root, weight 0)\n  -- Important (parent browse by prio, weight 0)</code></pre>\n\n<strong>Content:</strong>\n\n<pre class=\"no-highlight\"><code>\"First News\", (type story)\nSections: -News\nNews by Priority: -Important</code></pre>\n\nBrowsing that page results in a breadcrumb\n\n<code>Home > Browse by Prio > Important</code>\n\nClicking 'browse by Prio' tells me correctly \"there are currently not posts in this category\"\n\nI would have expected <code>Home > News > Posts</code> OR <code>Home > Posts</code>.\n\nAgain, I verified <code>taxonomy.module</code> contains the <code>select...where</code> statement.\n\nWhat surprised me is that the statement does not reference the <code>vocabulary</code> table - after all, that is where the prime vocab should be selected from.\n\nFlabbergasted.\n\nMartin"
    },
    {
      "date": "2005-08-03T07:21:03Z",
      "name": "Brendan K",
      "comment": "Hello,\n\nFirst, thank you for this article. I am already feeling alot more friendly towards breadcrumbs. And your walk through above was very helpful. Much appreciated!\n\nI have a question:\n\nDoes anyone know how to make it so that \"Home\" is just a static page? Not a super category for your entire site?\n\nfor instance, I would like to have the breadcrumbs for my news section appear as:\n\n<code>News >> Cool Article</code>\n\nas opposed to\n\n<code>Home >> News >> Cool Article</code>\n\nI feel that having everything as a sub of \"home\" is just not good design.\n\nAny suggestions on how to remedy this would be great. And, thanks to everyone who has contributed to this thread and discussions like this as it is very helpful for newbies like myself.\n\n-Brendan"
    },
    {
      "date": "2005-08-03T11:30:23Z",
      "isAuthorReply": true,
      "comment": "Hi Martin,\n\nThe only thing I can think of is that you haven't set the weights correctly for your vocabs. Check that your 'sections' vocab has a lighter weight than your 'news by priority' vocab. Having the weights set differently to this will result in exactly the problem you're having."
    },
    {
      "date": "2005-08-05T23:03:18Z",
      "name": "Martin",
      "comment": "Hello Jeremy,\n\nOK, the problem is solved. There was something I misread.\n\nThe story: The weights had been set correctly. After reversing the weights of the vocabs (-8/1 to 1/4) nothing changed. Going through the modules again, I realized the second step of patching taxonomy.module was <strong>not</strong> part of the current 4.6.2 Drupal. Applying that patch, I am now able to choose which vocab is chosen in the breadcrumb by modifying their weight. Therefore, and that was not clear for me, it is <strong>crucial</strong> to apply the patch in step2 of this docu to get the functionality.\n\nFor the record here are the file versions used:\n\n<pre class=\"no-highlight\"><code>taxonomy_context.module,v 1.36.2.1 2005/06/16 02:48:42\ntaxonomy.module,v 1.192.2.5 2005/05/31 21:13:40</code></pre>\n\nThanks!\n\nMartin"
    },
    {
      "date": "2005-08-23T08:56:39Z",
      "name": "JohnG",
      "comment": "I'm going to see if I can my hands on that book next ...\n\nI spent alot of time trying to make the undoubted powerful taxonomy.module actually useful in helping users navigate reems of information. It really is an intriguing module and I think that Jaza's hack is a brilliant way to reign in some of that power.\n\nI also came to the same conclusion as Marco about the search engine - which can be so much more subtle and powerful than even the most complex taxonomy. I was very suprised that the <code>search.module</code> has no truck with <code>taxonomy.module</code>.\n\nThankfully I recently found nedjo's SQL search (<a href=\"http://drupal.org/project/trip_search\">trip_search</a>) module which apparently has been lurking around the contributed projects for several iterations. It uses the (boolean & phrase) search features native to MySQL and then adds filtering by taxonomy terms and node types. Why it has not been included as the drupal core search module mystifies me!\n\nThe biggest problem now is getting writers and word-searchers to use the same vocabulary ... :)\n\nOne last point, I read somewhere that <code>taxonomy.module</code> evolved from a <code>keywords.module</code> (many moons ago). IMO it still has the feel an uncomfortable fusion of keywords and a file-structure. An interesting experiment, but I can't figure out how to actually make it useful! Jaza's patch (erm, hack) focuses it toward the file structure because this is badly needed when using drupal for CMS.\n\nIf anyone could point out some successful alternative uses of the taxonomy system I would be very interested."
    },
    {
      "date": "2005-08-23T09:20:41Z",
      "name": "JohnG",
      "comment": "Superficially - which is about the best I can do ! - nodes with multiple parents could display multiple breadcrumbs. Eg amazon.com - at the bottom of the page ... yes I know it looks messy but I do find it quite helpful :)"
    },
    {
      "date": "2005-08-24T04:28:57Z",
      "name": "dtabach",
      "url": "http://archiclube.org",
      "comment": "<blockquote>Therefore, and that was not clear for me, it is crucial to apply the patch in step2 of this docu to get the functionality</blockquote>\n\nI applied the second patch to <code>taxonomy.module</code> 4.6.3, and get the following error message:\n\n<pre class=\"no-highlight\"><code>Parse error: parse error, unexpected T_VARIABLE in /home/dtabach/public_html/modules/taxonomy.module on line 432</code></pre>\n\nI'm using the latest <code>taxonomy_context.module</code> from drupal's downloads, not modified."
    }
  ]
}
