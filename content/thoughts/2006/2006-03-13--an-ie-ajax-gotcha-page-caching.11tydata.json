{
  "comments": [
    {
      "date": "2006-03-27T09:08:04Z",
      "name": "Tony",
      "comment": "Thank you! Thank You! Thank You!\n\nI too have been stumped on why my AJAX code was working in Firefox and not in IE. Yes, I knew it was cache-related, but not how to fix it. Many suggestions on the web, like your experience, were ineffective.\n\nThank You!!!!"
    },
    {
      "date": "2006-04-07T02:19:48Z",
      "name": "darkfrog",
      "comment": "After adding all the headers above it was still caching in IE for me, so I ended up adding a <code>'&count=' + ++count;</code> to the end of my URL I'm querying so every request made is determined by IE to be a different page request."
    },
    {
      "date": "2006-04-13T07:05:46Z",
      "name": "Anonymous",
      "comment": "darkfrog, you saved my life with the <code>++count</code> suggestion.\n\nIE sucks big time mang. I waste so much time ensuring things work in both FF and IE."
    },
    {
      "date": "2006-04-13T07:14:29Z",
      "name": "Anonymous",
      "comment": "actually one more MEGA catcha, is that u HAVEEEEEEEEE to flush ur cache anytime u make changes to ur JS in IE.\n\nThis is another thing which caused me tons of heartache headache stomach ache"
    },
    {
      "date": "2006-04-13T13:34:38Z",
      "isAuthorReply": true,
      "comment": "I've heard of the technique of adding a random number to the end of the AJAX URL, to make it 'unique' so that IE doesn't cache it. But I found that in my case, I didn't need to do this: just setting the HTTP headers did it for me. It's possible that IE is so crap, that you need to use different techniques for different individual examples of JS. Perhaps sometimes you need to set the headers, sometimes you need a unique URL, sometimes you need both."
    },
    {
      "date": "2006-04-14T05:29:49Z",
      "name": "Chris",
      "url": "http://labs.lcls.org/",
      "comment": "Thanks for posting this. Just today I was stuck on the same thing: Firefox worked great, but not IE. I'm coding in C#, so in case someone stumbles upon this, this is what I used:\n\n<pre class=\"cs\"><code>Response.AddHeader(\"Cache-Control\", \"no-store, no-cache, must-revalidate\");</code></pre>\n\nThat did the trick!"
    },
    {
      "date": "2006-07-25T00:00:05Z",
      "name": "Kurapica",
      "url": "http://my.lintun.com/Kurapica/",
      "comment": "I use java and have the same problem with you. Thank you very much for tipping.\n\nDepending on my expierence on AJAX, only setting <code>'no-cache'</code> may not affect SILLY IE. So I add a timestamp to the XML:\n\n<pre class=\"java\"><code>response.setContentType(\"text/xml; charset=UTF-8\");\nresponse.setHeader(\"Cache-Control\", \"no-cache\");\nPrintWriter out = response.getWriter();\nout.println(\"<r>\"+Calendar.getInstance().getTime().getTime()+\"</r>\");\nout.flush();\nout.close();</code></pre>\n\nNow it works fine!! Thank you again guys!"
    },
    {
      "date": "2006-08-18T09:21:48Z",
      "name": "Ben",
      "comment": "I ran around in circles on this for a while, none of the above worked for me in IE when hitting the refresh button.\n\nOf course, the answer was right in the AJAX documentation:\n\nPage Caching\n\nWe have implemented a method to prevent page cacheing from undermining the AJAX methods in a page.  If you send in an input argument to a <code>CGI::Ajax-exported</code> function called <code>'NO_CACHE'</code>, the a special parameter will get attached to the end or your url with a random number in it. This will prevent a browser from caching your request.\n\n<pre class=\"perl\"><code>exported_func(['input1','NO_CACHE'],['result1']);</code></pre>\n\nThe extra param is called <code>pjxrand</code>, and won't interfere with the order of processing for the rest of your parameters."
    },
    {
      "date": "2006-09-22T06:52:08Z",
      "name": "Christiaan",
      "url": "http://chees.info",
      "comment": "I had the same problem but when I used POST for the Ajax call instead of GET, IE didn't cache it anymore. I haven't seen this anywhere else yet and I've just started using it so I'm not completely sure if it works in all cases but so far it's working fine for me."
    },
    {
      "date": "2006-11-11T06:27:11Z",
      "name": "Anonymous",
      "comment": "I thought that would work bur it didn't. Unique'ing the URL did it however."
    },
    {
      "date": "2006-11-30T09:18:13Z",
      "name": "Anonymous",
      "comment": "hey, just another person adding a 'thanks'.\n\nWTF IE!!!\n\n:)"
    },
    {
      "date": "2006-12-13T20:35:16Z",
      "name": "Tom Chappell",
      "url": "http://www.tomchappell.com/blog",
      "comment": "...and yet another 'thanks'. WTF, IE, indeed. Using POST instead of GET solved it for me, AND clearing the cache in my client so that the cached JavaScript would be flushed. That's absolutely retarded, I'm going to have to find a solution so that my clients don't have to clear their caches when I fix a bug in my JavaScript. Maybe put the JavaScript in a separate import file, and/or adding no-cache headers, and/or changing the URL each time, as other posters have mentioned."
    },
    {
      "date": "2006-12-13T20:57:10Z",
      "name": "Tom Chappell",
      "url": "http://www.tomchappell.com/blog",
      "comment": "And indeed, as the main poster points out in \"An IE AJAX gotcha: page caching\", simply including the relevant no-cache headers in the XML content of your AJAX responses does prevent IE from caching THAT content. I can use GET, rather than POST, for my AJAX requests, if my AJAX response includes those headers. There's still the issue of bugs in the JavaScript being cached, but surely some of the solutions posted here will address that."
    },
    {
      "date": "2007-02-09T04:20:25Z",
      "name": "Anonymous",
      "comment": "did it for me!!\n\nNice 1......big thanks."
    },
    {
      "date": "2007-04-18T03:30:13Z",
      "name": "joran",
      "comment": "whats so hard about just appending time to the end of the URL?\n\n<pre class=\"php\"><code>\"http://www.whatever.com/?var1=\".$svar.\"&time=\".time();</code></pre>\n\nand it should never cache?"
    },
    {
      "date": "2007-06-06T04:25:46Z",
      "name": "Anonymous",
      "comment": "While I hate IE 6+ I still think it is unfair to put the whole blame on it just because it uses cache more often than FF. It is the combination of server response headers and IE cache handling that is causing the trouble. For those interested I suggest reading this <a href=\"http://www.mnot.net/cache_docs/\">caching tutorial</a>. It is very well written.\n\nAbout JS files caching - check the response headers of JS files to see if they are correct and don't blame IE until you do so. :)"
    },
    {
      "date": "2007-07-30T05:32:17Z",
      "name": "villiard",
      "url": "http://www.villiard.com",
      "comment": "AH! OK, This is just want I wanted to know! Thanks a lot! Geez I hate Microsoft.. :-)"
    },
    {
      "date": "2007-11-16T03:30:50Z",
      "name": "John U.",
      "comment": "<pre class=\"no-highlight\"><code><cfheader name=\"Cache-Control\" value=\"no-store\" />\n<cfheader name=\"Pragma\" value=\"no-cache\" />\n<cfheader name=\"Expires\" value=\"Tue, 16 Oct 1973 00:00:00 GMT\" /></code></pre>\n\ncoldfusion if anyone wants it\n\nBy the way a good way to check caching issues in ie is to go to\n\n<p>Tools<br>Internet options<br>Browsing History (Settings)<br>Check for newer versions of stored pages: Every time I visit the page\n\nThis will make it work if its a caching issue."
    },
    {
      "date": "2007-12-29T07:37:43Z",
      "name": "George",
      "comment": "There is an easier way instead of wacky header modifications.\n\nAdd <strong>a dummy variable</strong> to your GET request.\n\nExample:\n\n<pre class=\"javascript\"><code>var randomnumber = Math.floor(Math.random()*1000001);\nvar file = 'ajaxfile.php?dummy=' + randomnumber;\nxmlhttp.open('GET', file , true);</code></pre>\n\nThis forces all browsers to resubmit (well, it doesn't work once in a million)"
    }
  ]
}
